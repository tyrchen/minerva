---
import Layout from '~/layouts/PageLayout.astro';

import Header from '~/components/widgets/Header.astro';
import Hero2 from '~/components/widgets/Hero2.astro';
import Features from '~/components/widgets/Features.astro';
import Steps2 from '~/components/widgets/Steps2.astro';
import Content from '~/components/widgets/Content.astro';
import Pricing from '~/components/widgets/Pricing.astro';

import FAQs from '~/components/widgets/FAQs.astro';
import BlogLatestPosts from '~/components/widgets/BlogLatestPosts.astro';

const metadata = {
  title: 'SaaS Landing Page',
};
---

<Layout metadata={metadata}>
  <Fragment slot="header">
    <Header
      actions={[
        {
          variant: 'secondary',
          text: 'Signin',
          href: '/signin',
        },
      ]}
      isSticky
    />
  </Fragment>

  <!-- Hero2 Widget ******************* -->

  <Hero2
    tagline="Serverless Analytics"
    actions={[
      { variant: 'primary', text: 'Signin to start!', href: '/signin' },
      { text: 'Learn more', href: '#features' },
    ]}
    image={{
      src: 'https://images.unsplash.com/photo-1580481072645-022f9a6dbf27?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80',
      alt: 'Minerva Hero Image',
    }}
  >
    <Fragment slot="title">
      Athena alternative: <br /> Run <span class="text-accent dark:text-white highlight">analytics</span> with you S3 datalake!<br
      />
    </Fragment>

    <Fragment slot="subtitle">
      <span class="hidden sm:inline">
        Query your datasets directly with <span class="font-semibold">Minerva</span> without headache.</span
      >
      Put your data in S3. Query. Store. Share.
    </Fragment>
  </Hero2>
  <!-- FAQs Widget ******************* -->

  <FAQs
    title="Frequently Asked Questions"
    items={[
      {
        title: 'Why not duckdb?',
        description:
          'clickhouse is much faster (https://www.vantage.sh/blog/clickhouse-local-vs-duckdb). And embedding duckdb is too each for this project thus lots of fun of hackathon is gone',
        icon: 'tabler:chevrons-right',
      },
      {
        title: 'Will it be open sourced?',
        description: `Certainly! The core code will be open sourced soon with MIT license. The deployment script is a bit tricky, as currently it is pretty targeted to our AWS sandbox account. I need to figure out how. But anyway, deployment is not the core value of this project. It is not hard to manually create the resources or build terraform/pulumi script yourself.`,
        icon: 'tabler:chevrons-right',
      },
      {
        title: 'What are the biggest learnings from building minerva?',
        description:
          'Using docker image for lambda function requires extra attention. The base image misses lots of things including `/etc/localtime`. Building frontend takes much much longer than I expected, and using smithy for the API layer is the best decision I made. It is so easy to change both backend and frontend simultaneously.',
        icon: 'tabler:chevrons-right',
      },
      {
        title: 'What is the tech stack for Minerva?',
        description: `Rust for the APIs and core functionalities. Astro/Vue for the frontend. Lambda function & web frontend are backed by AWS Cloudfront.`,
        icon: 'tabler:chevrons-right',
      },
    ]}
  >
    <Fragment slot="bg">
      <div class="absolute inset-0 bg-blue-50 dark:bg-transparent"></div>
    </Fragment>
  </FAQs>

  <!-- Steps2 Widget ****************** -->

  <Steps2
    title="Reach out to us"
    subtitle="Have questions? Feel free to contact us using the form below. We're here to help!"
    callToAction={{
      text: 'Contact us',
      href: '/',
    }}
    items={[
      {
        title: 'Email us',
        description: 'contact@support.com',
        icon: 'tabler:mail',
      },
      {
        title: 'Call us',
        description: '+1 (234) 567-890',
        icon: 'tabler:headset',
      },
      {
        title: 'Follow us',
        description: '@example',
        icon: 'tabler:brand-twitter',
      },
    ]}
  />
</Layout>
